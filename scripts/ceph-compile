#!/bin/bash
#$1 = ceph branch to compile (default: master)
buildBranch=master
if [ -n "$1" ]; then
  buildBranch=$1
fi

# Updating the submodules can cause failures
#set -e

function installDeps {
  echo "Update installed packages"
  # Make sure all packages are up to date
  zypper ref
  zypper update -y
  zypper install -y python3-Cython python3-remoto podman python3-podman docker python3-docker # For cephadm use
  zypper dup -y

  # Install all requirements to run tests
  cd /ceph/src/pybind/mgr/dashboard
  git fetch ceph
  # Has to be changed to what you want to compile (if not set it's master)
  git checkout ceph/$buildBranch
  if [ "$buildBranch" == "nautilus" ]; then
    python -m pip install --upgrade pip
    pip2 install --ignore-installed -r requirements.txt
  else
    # Doesn't exist in nautilus
    /ceph/install-deps-python3/bin/python -m pip install --upgrade pip
  fi
  pip3 install --ignore-installed --upgrade -r requirements.txt

  cd /ceph
  find . -name \*.pyc -delete
  zypper install rpm-build -y # need to be installed in order to run install-deps.sh
  ./install-deps.sh

  # SSO dependencies
  # (install-deps.sh has to be run before)
  pip install python3-saml
  #pip2 install python-saml
  echo "Installed everything - press any key to continue"
  #read x
}

function checkoutSubmodules {
  git submodule update -f --recursive --remote
  git submodule update -f --recursive --init
  echo "Everything checked out - press any key to continue"
  #read x
}

function compileCeph {
  clear
  echo "Begin compiling ceph"
  cd /ceph
  #ARGS="-DWITH_PYTHON3=ON -DWITH_PYTHON2=OFF -DMGR_PYTHON_VERSION=3 -DWITH_RADOSGW_AMQP_ENDPOINT=OFF -DENABLE_GIT_VERSION=OFF -DWITH_TESTS=ON -DWITH_CCACHE=ON $ARGS"
  ARGS="-DENABLE_GIT_VERSION=OFF -DWITH_TESTS=ON -DWITH_CCACHE=ON $ARGS"
  if [ "$buildBranch" == "master" ]; then
    ARGS="-DWITH_PYTHON3=3 -DWITH_RADOSGW_AMQP_ENDPOINT=OFF -DWITH_RADOSGW_KAFKA_ENDPOINT=OFF $ARGS"
  else
    ARGS="-DWITH_PYTHON3=ON -DWITH_PYTHON2=OFF -DMGR_PYTHON_VERSION=3 -DWITH_RADOSGW_AMQP_ENDPOINT=OFF $ARGS"
  fi

  #Only if python3 stops working
  #ARGS="-D WITH_PYTHON3=ON -D WITH_TESTS=ON -D WITH_CCACHE=ON -D ENABLE_GIT_VERSION=OFF WITH_MGR_DASHBOARD_FRONTEND=OFF $ARGS"

  NPROC=${NPROC:-$(nproc --ignore=2)}

  if [ -d "build" ]; then
      cd build
      cmake -DBOOST_J=$NPROC $ARGS ..
  else
      ./do_cmake.sh $ARGS
      cd build
  fi

  ccache make -j$NPROC
  echo "compiled - press any key to create the test environments"
  read x
}

function createTestEnvironments {
  clear
  echo "Creating test environments"
  setupVirtualenv=/ceph/src/tools/setup-virtualenv.sh
  cd /ceph/src/pybind/mgr
  $setupVirtualenv /ceph/build/mgr-virtualenv
  cd dashboard
  $setupVirtualenv /ceph/build/mgr-dashboard-virtualenv
  # For debugging
  pip install pydevd-pycharm~=191.6605.12
}

# Use all functions to compile ceph

installDeps
checkoutSubmodules
compileCeph
createTestEnvironments
